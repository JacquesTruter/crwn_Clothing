{"ast":null,"code":"var _jsxFileName = \"/Users/Jacques_T/Desktop/React/capstone/crwn-clothing/src/contexts/cart.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport cartItem from '../components/cart-item/cart-item.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst addCartItem = (cartItems, productToAdd) => {\n  // search to see if productToAdd is already in cartItems\n  const existingCartItem = cartitems.find(cartItem => cartItem.id === productToAdd.id);\n\n  // if productToAdd is found\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? {\n      ...cartitem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  //returns new array with added product\n  return [...cartItems, {\n    ...productToAdd,\n    quantity: 1\n  }];\n};\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  cartTotal: 0\n});\nexport const CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const addItemToCart = productToAdd => {};\n  const removeItemFromCart = () => {};\n  const clearItemFromCart = () => {};\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    removeItemFromCart,\n    clearItemFromCart,\n    cartItems,\n    cartCount,\n    cartTotal\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"X7m0wQJ+zlrOgjCUh5u2IGGBLdE=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","cartItem","addCartItem","cartItems","productToAdd","existingCartItem","cartitems","find","id","map","cartitem","quantity","CartContext","isCartOpen","setIsCartOpen","addItemToCart","removeItemFromCart","clearItemFromCart","cartCount","cartTotal","CartProvider","children","setCartItems","value"],"sources":["/Users/Jacques_T/Desktop/React/capstone/crwn-clothing/src/contexts/cart.context.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\nimport cartItem from '../components/cart-item/cart-item.component';\n\nconst addCartItem = (cartItems, productToAdd) => {\n\t// search to see if productToAdd is already in cartItems\n\tconst existingCartItem = cartitems.find(\n\t\t(cartItem) => cartItem.id === productToAdd.id\n\t);\n\n\t// if productToAdd is found\n\n\tif (existingCartItem) {\n\t\treturn cartItems.map((cartItem) =>\n\t\t\tcartItem.id === productToAdd.id\n\t\t\t\t? { ...cartitem, quantity: cartItem.quantity + 1 }\n\t\t\t\t: cartItem\n\t\t);\n\t}\n\n\t//returns new array with added product\n\treturn [...cartItems, { ...productToAdd, quantity: 1 }];\n};\n\nexport const CartContext = createContext({\n\tisCartOpen: false,\n\tsetIsCartOpen: () => {},\n\tcartItems: [],\n\taddItemToCart: () => {},\n\tremoveItemFromCart: () => {},\n\tclearItemFromCart: () => {},\n\tcartCount: 0,\n\tcartTotal: 0,\n});\n\nexport const CartProvider = ({ children }) => {\n\tconst [isCartOpen, setIsCartOpen] = useState(false);\n\tconst [cartItems, setCartItems] = useState([]);\n\n\tconst addItemToCart = (productToAdd) => {};\n\n\tconst removeItemFromCart = () => {};\n\n\tconst clearItemFromCart = () => {};\n\n\tconst value = {\n\t\tisCartOpen,\n\t\tsetIsCartOpen,\n\t\taddItemToCart,\n\t\tremoveItemFromCart,\n\t\tclearItemFromCart,\n\t\tcartItems,\n\t\tcartCount,\n\t\tcartTotal,\n\t};\n\n\treturn <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,QAAQ,MAAM,6CAA6C;AAAC;AAEnE,MAAMC,WAAW,GAAG,CAACC,SAAS,EAAEC,YAAY,KAAK;EAChD;EACA,MAAMC,gBAAgB,GAAGC,SAAS,CAACC,IAAI,CACrCN,QAAQ,IAAKA,QAAQ,CAACO,EAAE,KAAKJ,YAAY,CAACI,EAAE,CAC7C;;EAED;;EAEA,IAAIH,gBAAgB,EAAE;IACrB,OAAOF,SAAS,CAACM,GAAG,CAAER,QAAQ,IAC7BA,QAAQ,CAACO,EAAE,KAAKJ,YAAY,CAACI,EAAE,GAC5B;MAAE,GAAGE,QAAQ;MAAEC,QAAQ,EAAEV,QAAQ,CAACU,QAAQ,GAAG;IAAE,CAAC,GAChDV,QAAQ,CACX;EACF;;EAEA;EACA,OAAO,CAAC,GAAGE,SAAS,EAAE;IAAE,GAAGC,YAAY;IAAEO,QAAQ,EAAE;EAAE,CAAC,CAAC;AACxD,CAAC;AAED,OAAO,MAAMC,WAAW,gBAAGd,aAAa,CAAC;EACxCe,UAAU,EAAE,KAAK;EACjBC,aAAa,EAAE,MAAM,CAAC,CAAC;EACvBX,SAAS,EAAE,EAAE;EACbY,aAAa,EAAE,MAAM,CAAC,CAAC;EACvBC,kBAAkB,EAAE,MAAM,CAAC,CAAC;EAC5BC,iBAAiB,EAAE,MAAM,CAAC,CAAC;EAC3BC,SAAS,EAAE,CAAC;EACZC,SAAS,EAAE;AACZ,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACxC,MAAM,CAACR,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACI,SAAS,EAAEmB,YAAY,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMgB,aAAa,GAAIX,YAAY,IAAK,CAAC,CAAC;EAE1C,MAAMY,kBAAkB,GAAG,MAAM,CAAC,CAAC;EAEnC,MAAMC,iBAAiB,GAAG,MAAM,CAAC,CAAC;EAElC,MAAMM,KAAK,GAAG;IACbV,UAAU;IACVC,aAAa;IACbC,aAAa;IACbC,kBAAkB;IAClBC,iBAAiB;IACjBd,SAAS;IACTe,SAAS;IACTC;EACD,CAAC;EAED,oBAAO,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEI,KAAM;IAAA,UAAEF;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAwB;AAC7E,CAAC;AAAC,GAtBWD,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}