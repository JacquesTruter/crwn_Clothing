{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC9TKQCryLfdTFSTZbRROZ_T1dslm3DiwU\",\n  authDomain: \"crwn-clothing-db-62f12.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-62f12\",\n  storageBucket: \"crwn-clothing-db-62f12.appspot.com\",\n  messagingSenderId: \"176642973415\",\n  appId: \"1:176642973415:web:d5bfb48df0119cbb968c42\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\n// Initialize Google Sign in\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, provider);\nexport const db = getFirestore();\n\n/* User sign-In Start*/\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error create', error.message);\n    }\n  }\n  return userDocRef;\n};\n\n/* User Sign-In End */\n\n/* User Create start */\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\n\n/* User Create start */","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","console","log","message","createAuthUserWithEmailAndPassword","password"],"sources":["/Users/Jacques_T/Desktop/React/capstone/crwn-clothing/src/utils/firebase/firebase.utils.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore'\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC9TKQCryLfdTFSTZbRROZ_T1dslm3DiwU\",\n  authDomain: \"crwn-clothing-db-62f12.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-62f12\",\n  storageBucket: \"crwn-clothing-db-62f12.appspot.com\",\n  messagingSenderId: \"176642973415\",\n  appId: \"1:176642973415:web:d5bfb48df0119cbb968c42\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\n\n// Initialize Google Sign in\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n    prompt: 'select_account'\n});\n\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, provider);\n\nexport const db = getFirestore();\n\n\n/* User sign-In Start*/\nexport const createUserDocumentFromAuth = async (userAuth, additionalInformation = {}) => {\n    if (!userAuth) return;\n\n    const userDocRef = doc(db, 'users', userAuth.uid);\n\n    const userSnapshot = await getDoc(userDocRef);\n\n    if(!userSnapshot.exists()) {\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await setDoc(userDocRef, {\n                displayName,\n                email,\n                createdAt,\n                ...additionalInformation,\n            });\n        } catch (error) {\n            console.log('error create', error.message);\n        }\n    }\n\n    return userDocRef;\n};\n\n/* User Sign-In End */\n\n/* User Create start */\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n    if (!email || !password) return;\n\n    return await createUserWithEmailAndPassword(auth, email, password);\n};\n\n/* User Create start */\n"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,eAAe,EAAEC,kBAAkB,EAAEC,8BAA8B,QAAQ,eAAe;AAChI,SAASC,YAAY,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAQ,oBAAoB;AACtE;AACA;;AAEA;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,wCAAwC;EACpDC,SAAS,EAAE,wBAAwB;EACnCC,aAAa,EAAE,oCAAoC;EACnDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGjB,aAAa,CAACU,cAAc,CAAC;;AAGjD;AACA,MAAMQ,QAAQ,GAAG,IAAId,kBAAkB,EAAE;AACzCc,QAAQ,CAACC,mBAAmB,CAAC;EACzBC,MAAM,EAAE;AACZ,CAAC,CAAC;AAGF,OAAO,MAAMC,IAAI,GAAGpB,OAAO,EAAE;AAC7B,OAAO,MAAMqB,qBAAqB,GAAG,MAAMnB,eAAe,CAACkB,IAAI,EAAEH,QAAQ,CAAC;AAC1E,OAAO,MAAMK,wBAAwB,GAAG,MAAMrB,kBAAkB,CAACmB,IAAI,EAAEH,QAAQ,CAAC;AAEhF,OAAO,MAAMM,EAAE,GAAGlB,YAAY,EAAE;;AAGhC;AACA,OAAO,MAAMmB,0BAA0B,GAAG,gBAAOC,QAAQ,EAAiC;EAAA,IAA/BC,qBAAqB,uEAAG,CAAC,CAAC;EACjF,IAAI,CAACD,QAAQ,EAAE;EAEf,MAAME,UAAU,GAAGrB,GAAG,CAACiB,EAAE,EAAE,OAAO,EAAEE,QAAQ,CAACG,GAAG,CAAC;EAEjD,MAAMC,YAAY,GAAG,MAAMtB,MAAM,CAACoB,UAAU,CAAC;EAE7C,IAAG,CAACE,YAAY,CAACC,MAAM,EAAE,EAAE;IACvB,MAAM;MAAEC,WAAW;MAAEC;IAAM,CAAC,GAAGP,QAAQ;IACvC,MAAMQ,SAAS,GAAG,IAAIC,IAAI,EAAE;IAE5B,IAAI;MACA,MAAM1B,MAAM,CAACmB,UAAU,EAAE;QACrBI,WAAW;QACXC,KAAK;QACLC,SAAS;QACT,GAAGP;MACP,CAAC,CAAC;IACN,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,KAAK,CAACG,OAAO,CAAC;IAC9C;EACJ;EAEA,OAAOX,UAAU;AACrB,CAAC;;AAED;;AAEA;;AAEA,OAAO,MAAMY,kCAAkC,GAAG,OAAOP,KAAK,EAAEQ,QAAQ,KAAK;EACzE,IAAI,CAACR,KAAK,IAAI,CAACQ,QAAQ,EAAE;EAEzB,OAAO,MAAMpC,8BAA8B,CAACgB,IAAI,EAAEY,KAAK,EAAEQ,QAAQ,CAAC;AACtE,CAAC;;AAED"},"metadata":{},"sourceType":"module","externalDependencies":[]}