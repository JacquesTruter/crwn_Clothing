{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithEmailAndPassword, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch } from 'firebase/firestore';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: 'AIzaSyC9TKQCryLfdTFSTZbRROZ_T1dslm3DiwU',\n  authDomain: 'crwn-clothing-db-62f12.firebaseapp.com',\n  projectId: 'crwn-clothing-db-62f12',\n  storageBucket: 'crwn-clothing-db-62f12.appspot.com',\n  messagingSenderId: '176642973415',\n  appId: '1:176642973415:web:d5bfb48df0119cbb968c42'\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\n// Initialize Google Sign in\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const batch = writeBatch(db);\n  const collectionRef = collection(db, collectionKey);\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase);\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n  console.log('done');\n};\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, provider);\nexport const db = getFirestore();\n\n/* User sign-Up Start*/\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error create', error.message);\n    }\n  }\n  return userDocRef;\n};\n\n/* User Sign-In End */\n\n/* User Create start */\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\n\n/* User Create start */\n\n/* User Sign-In start */\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);","map":{"version":3,"names":["initializeApp","getAuth","signInWithEmailAndPassword","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider","setCustomParameters","prompt","addCollectionAndDocuments","collectionKey","objectsToAdd","batch","db","collectionRef","forEach","object","docRef","title","toLowerCase","set","commit","console","log","auth","signInWithGooglePopup","signInWithGoogleRedirect","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"sources":["/Users/Jacques_T/Desktop/React/capstone/crwn-clothing/src/utils/firebase/firebase.utils.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport {\n\tgetAuth,\n\tsignInWithEmailAndPassword,\n\tsignInWithRedirect,\n\tsignInWithPopup,\n\tGoogleAuthProvider,\n\tcreateUserWithEmailAndPassword,\n\tsignOut,\n\tonAuthStateChanged,\n} from 'firebase/auth';\nimport {\n\tgetFirestore,\n\tdoc,\n\tgetDoc,\n\tsetDoc,\n\tcollection,\n\twriteBatch,\n} from 'firebase/firestore';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n\tapiKey: 'AIzaSyC9TKQCryLfdTFSTZbRROZ_T1dslm3DiwU',\n\tauthDomain: 'crwn-clothing-db-62f12.firebaseapp.com',\n\tprojectId: 'crwn-clothing-db-62f12',\n\tstorageBucket: 'crwn-clothing-db-62f12.appspot.com',\n\tmessagingSenderId: '176642973415',\n\tappId: '1:176642973415:web:d5bfb48df0119cbb968c42',\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\n// Initialize Google Sign in\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n\tprompt: 'select_account',\n});\n\nexport const addCollectionAndDocuments = async (\n\tcollectionKey,\n\tobjectsToAdd\n) => {\n\tconst batch = writeBatch(db);\n\tconst collectionRef = collection(db, collectionKey);\n\n\tobjectsToAdd.forEach((object) => {\n\t\tconst docRef = doc(collectionRef, object.title.toLowerCase);\n\t\tbatch.set(docRef, object);\n\t});\n\n\tawait batch.commit();\n\tconsole.log('done');\n};\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const signInWithGoogleRedirect = () =>\n\tsignInWithRedirect(auth, provider);\n\nexport const db = getFirestore();\n\n/* User sign-Up Start*/\nexport const createUserDocumentFromAuth = async (\n\tuserAuth,\n\tadditionalInformation = {}\n) => {\n\tif (!userAuth) return;\n\n\tconst userDocRef = doc(db, 'users', userAuth.uid);\n\n\tconst userSnapshot = await getDoc(userDocRef);\n\n\tif (!userSnapshot.exists()) {\n\t\tconst { displayName, email } = userAuth;\n\t\tconst createdAt = new Date();\n\n\t\ttry {\n\t\t\tawait setDoc(userDocRef, {\n\t\t\t\tdisplayName,\n\t\t\t\temail,\n\t\t\t\tcreatedAt,\n\t\t\t\t...additionalInformation,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log('error create', error.message);\n\t\t}\n\t}\n\n\treturn userDocRef;\n};\n\n/* User Sign-In End */\n\n/* User Create start */\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n\tif (!email || !password) return;\n\n\treturn await createUserWithEmailAndPassword(auth, email, password);\n};\n\n/* User Create start */\n\n/* User Sign-In start */\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n\tif (!email || !password) return;\n\n\treturn await signInWithEmailAndPassword(auth, email, password);\n};\n\nexport const signOutUser = async () => await signOut(auth);\n\nexport const onAuthStateChangedListener = (callback) =>\n\tonAuthStateChanged(auth, callback);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}