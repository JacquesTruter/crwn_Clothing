{"ast":null,"code":"var _jsxFileName = \"/Users/Jacques_T/Desktop/React/capstone/crwn-clothing/src/components/button/button.component.jsx\";\nimport { BaseButton, GoogleSignInButton, InvertedButton } from './button.styles.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUTTON_TYPE_CLASSES = {\n  base: 'base',\n  google: 'google-sign-in',\n  inverted: 'inverted'\n};\nconst getButton = function () {\n  let buttonType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : BUTTON_TYPE_CLASSES.base;\n  return {\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton\n  }[buttonType];\n};\nconst Button = _ref => {\n  let {\n    children,\n    buttonType,\n    ...otherProps\n  } = _ref;\n  const CustomButton = getButton(buttonType);\n  return /*#__PURE__*/_jsxDEV(CustomButton, {\n    ...otherProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["BaseButton","GoogleSignInButton","InvertedButton","BUTTON_TYPE_CLASSES","base","google","inverted","getButton","buttonType","Button","children","otherProps","CustomButton"],"sources":["/Users/Jacques_T/Desktop/React/capstone/crwn-clothing/src/components/button/button.component.jsx"],"sourcesContent":["import {\n\tBaseButton,\n\tGoogleSignInButton,\n\tInvertedButton,\n} from './button.styles.jsx';\n\nconst BUTTON_TYPE_CLASSES = {\n\tbase: 'base',\n\tgoogle: 'google-sign-in',\n\tinverted: 'inverted',\n};\n\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base) =>\n\t({\n\t\t[BUTTON_TYPE_CLASSES.base]: BaseButton,\n\t\t[BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n\t\t[BUTTON_TYPE_CLASSES.inverted]: InvertedButton,\n\t}[buttonType]);\n\nconst Button = ({ children, buttonType, ...otherProps }) => {\n\tconst CustomButton = getButton(buttonType);\n\treturn <CustomButton {...otherProps}>{children}</CustomButton>;\n};\n\nexport default Button;\n"],"mappings":";AAAA,SACCA,UAAU,EACVC,kBAAkB,EAClBC,cAAc,QACR,qBAAqB;AAAC;AAE7B,MAAMC,mBAAmB,GAAG;EAC3BC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE,gBAAgB;EACxBC,QAAQ,EAAE;AACX,CAAC;AAED,MAAMC,SAAS,GAAG;EAAA,IAACC,UAAU,uEAAGL,mBAAmB,CAACC,IAAI;EAAA,OACtD;IACA,CAACD,mBAAmB,CAACC,IAAI,GAAGJ,UAAU;IACtC,CAACG,mBAAmB,CAACE,MAAM,GAAGJ,kBAAkB;IAChD,CAACE,mBAAmB,CAACG,QAAQ,GAAGJ;EACjC,CAAC,CAACM,UAAU,CAAC;AAAA,CAAC;AAEf,MAAMC,MAAM,GAAG,QAA6C;EAAA,IAA5C;IAAEC,QAAQ;IAAEF,UAAU;IAAE,GAAGG;EAAW,CAAC;EACtD,MAAMC,YAAY,GAAGL,SAAS,CAACC,UAAU,CAAC;EAC1C,oBAAO,QAAC,YAAY;IAAA,GAAKG,UAAU;IAAA,UAAGD;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAgB;AAC/D,CAAC;AAAC,KAHID,MAAM;AAKZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}